#!/usr/bin/env bash

set -euo pipefail

[[ -z ${ASDF_INSTALL_TYPE+x} ]] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[[ -z ${ASDF_INSTALL_VERSION+x} ]] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[[ -z ${ASDF_INSTALL_PATH+x} ]] && echo "ASDF_INSTALL_PATH is required" && exit 1

function install() {
  local install_type=$1
  local version=$2
  local install_path=$3

  [ "$install_type" != "version" ] && echo "intall type, $install_type, is not supported" && exit 1

  local platform
  case "$(uname -s)" in
    Darwin) platform="darwin"; download_ext="zip" ;;
    Linux) platform="linux"; download_ext="tar.gz" ;;
    *) echo "unsupported platform" && exit 1 ;;
  esac

  local architecture
  case "$(uname -m)" in
    aarch64* | arm64) architecture="arm64" ;;
    x86_64*) architecture="amd64" ;;
    *) echo "unsupported architecture" && exit 1 ;;
  esac

  local tmp_download_dir=$(mktemp -d)
  local repo="mattn/efm-langserver"
  local download_basename="efm-langserver_v${version}_${platform}_${architecture}"
  local download_filename="${download_basename}.${download_ext}"
  local download_url="https://github.com/${repo}/releases/download/v${version}/${download_basename}.${download_ext}"

  mkdir -p "${tmp_download_dir}"
  pushd "${tmp_download_dir}" >/dev/null

  echo "Downloading from ${download_url}"
  curl -fLsS -H "Accept: application/octet-stream" -o "${download_filename}" "${download_url}"

  case "${download_ext}" in
    "zip") unzip "${download_filename}" ;;
    "tar.gz") tar xfz "${download_filename}" ;;
  esac

  mkdir -p "${install_path}/bin"
  cp -fp "${download_basename}/efm-langserver" "${install_path}/bin/"

  popd >/dev/null
}

install "${ASDF_INSTALL_TYPE}" "${ASDF_INSTALL_VERSION}" "${ASDF_INSTALL_PATH}"
